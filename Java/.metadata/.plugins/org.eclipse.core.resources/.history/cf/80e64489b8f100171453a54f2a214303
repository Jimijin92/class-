package com.manager;

import java.util.ArrayList;
import java.util.Calendar;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Scanner;

import com.common.Manager;
import com.common.Student;
import com.common.StudentAddInfor;
import com.io.*;

public class ComManagerMenu {

   private static Scanner scan;
         //매니저 기본정보 넣은 리스트
   static {
      scan = new Scanner(System.in);
      
   }
   
   
   public static void main(String[] args) {
      //메뉴 시작전 학생 기본정보.dat 와 학생 추가정보.dat 읽어서 메모리에 옮기기
      ComInManager.load();
      //System.out.println(ComInManager.getManagerlist());
      boolean loop = true;
      
      while (loop) {
         
         System.out.println("============================");
         System.out.println("	관리자");
         System.out.println("============================");
         System.out.println("1.회원 목록");
         System.out.println("2.통계");
         System.out.println("3.블랙리스트 관리");
         System.out.println("4.마이페이지");
         System.out.println("5.캘린더 보기");
         System.out.println("선택 : ");
         
         String sel = scan.nextLine();
         
         if(sel.equals("1")) listMember();
         else if (sel.equals("2")) statistics();
         else if (sel.equals("3")) blacklist();
         else if (sel.equals("4")) myPage();
         else if (sel.equals("5")) diary();
         else loop = false; //메뉴탈출    
         
      }//while
      
      System.out.println("프로그램 종료");
   
   }//main


   
private static void listMember() {
	
	
}


private static void statistics() {
	
	
}


private static void blacklist() {
	
	
}


private static void myPage() {
	
	
}


private static void diary() {
	
	int year = 0;
	int month = 0;
	int lastDay = 0; //해당 달력의 마지막 날짜
	int day_of_week = 0; //1일에 해당하는 요일
	
	Scanner scan = new Scanner(System.in);

	System.out.print("년 : ");
	year = scan.nextInt();
	
	System.out.print("월 : ");
	month = scan.nextInt();
	
	Calendar c = Calendar.getInstance();//현재 운영체제에 설정되어 있는 시간대를 기준으로 하위 객체얻기
	c.set(Calendar.YEAR, year);
	c.set(Calendar.MONTH, month - 1);
	c.set(Calendar.DATE, 1);
	
	lastDay = c.getActualMaximum(Calendar.DATE);//특정월의 마지막일 구하기
	day_of_week = c.get(Calendar.DAY_OF_WEEK);//요일을 리턴하는 함수 
	

	System.out.println();
	System.out.println("====================================================");
	System.out.printf("                    %d년 %d월\n", year, month);
	System.out.println("====================================================");
	System.out.println("[일]\t[월]\t[화]\t[수]\t[목]\t[금]\t[토]");
	
	
	//1일을 해당 요일의 위치에 맞추기 위해 공백을 출력
	for (int i=1; i<day_of_week; i++) {
		System.out.print("\t");
	}
	
	//날짜 출력
	for (int day=1; day<=lastDay; day++) {
		System.out.printf("%3d\t", day);
		
		//토요일
		//if (day % 7 == 2) {
		if ((day + day_of_week - 2) % 7 == 6) {
			System.out.println();
		}
	}
	System.out.println();
	
}
   
}//ComManagerMenu
   
   
